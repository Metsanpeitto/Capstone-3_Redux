{"version":3,"sources":["imgs/finland.png","imgs/norway.png","imgs/sweden.png","imgs/denmark.png","redux/locations/locations.js","redux/filter/filter.js","redux/configureStore.js","components/Card.js","components/Displayer.js","imgs/scandinavia.png","pages/Locations.js","pages/Details.js","imgs/next.svg","imgs/microphone.svg","imgs/settings.svg","components/Navbar.js","api/api.js","redux/api/api.js","App.js","reportWebVitals.js","index.js"],"names":["RECEIVE_LOCATIONS","FETCH_CITIES","initialState","countries","imgs","Finland","Sweden","Norway","Denmark","locations","cities","reducer","state","action","type","FILTER_COUNTRIES","FILTER_REFRESH","countriesFiltered","locationsFiltered","value","payload","console","log","newCountries","newLocations","newImgs","length","forEach","c","index","push","imgsFiltered","category","combineReducers","locationsReducer","filtersReducer","store","createStore","applyMiddleware","thunk","logger","Card","props","img","country","city","temp","tempMax","tempMin","main","className","src","alt","Displayer","dispatch","useDispatch","useSelector","useState","countriesOld","setCountriesOld","locationsOld","setLocationsOld","imgsOld","setImgsOld","useEffect","placeholder","onChange","e","target","filterCountries","id","name","map","to","pathname","process","itemProps","countryName","data","active","exact","Locations","Scandinavia","Details","citiesOld","setCitiesOld","location","fetchCities","Navbar","Next","Mic","Settings","request","axios","get","result","status","list","getLocations","a","axiosOulu","axiosHelsinki","axiosTornio","axiosKemili","axiosLulea","axiosUppsala","axiosGoteborg","axiosStockholm","axioOsslo","axiosTromso","axiosVardo","axiosBergen","axiosCopenhagen","axiosHelsingor","axiosSkagen","axiosAlborg","all","then","spread","res0","res1","res2","res3","res4","res5","res6","res7","res8","res9","res10","res11","res12","res13","res14","res15","europe","oulu","helsinki","tornio","kemili","lulea","uppsala","goteborg","stockholm","oslo","tromso","vardo","bergen","copenhagen","helsingor","skagen","aalborg","countriesObject","keys","Object","countriesNew","kelvinDifference","k","citiesObject","citiesNew","cityObject","rain","snow","temp_max","temp_min","humidity","tempC","toFixed","tempMaxC","tempMinC","receiveLocations","App","this","path","component","React","Component","connect","oldLocations","setTimeout","api","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c689027.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/finland.9c0d44c3.png\";","export default __webpack_public_path__ + \"static/media/norway.adc68c56.png\";","export default __webpack_public_path__ + \"static/media/sweden.a00cbf4b.png\";","export default __webpack_public_path__ + \"static/media/denmark.82a15586.png\";","/* eslint-disable object-shorthand */\nimport Finland from '../../imgs/finland.png';\nimport Norway from '../../imgs/norway.png';\nimport Sweden from '../../imgs/sweden.png';\nimport Denmark from '../../imgs/denmark.png';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\n\nexport const fetchCities = (cities) => ({\n  type: FETCH_CITIES,\n  cities,\n});\n\nconst initialState = {\n  countries: ['Finland', 'Sweden', 'Norway', 'Denmark'],\n  imgs: [Finland, Sweden, Norway, Denmark],\n  locations: null,\n  cities: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS: {\n      const { locations } = action;\n      return {\n        ...state, locations,\n      };\n    }\n    case FETCH_CITIES: {\n      const { cities } = action;\n      return {\n        ...state,\n        cities: cities,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const FILTER_COUNTRIES = 'locationStore/filter/FILTER_COUNTRIES';\nconst FILTER_REFRESH = 'locationStore/filter/FILTER_REFRESH';\n\nconst initialState = {\n  countriesFiltered: null,\n  locationsFiltered: null,\n  imgs: null,\n  value: '-',\n  countries: ['Finland', 'Sweden', 'Norway', 'Denmark'],\n};\n\nexport const filterCountries = (payload) => ({\n  type: FILTER_COUNTRIES,\n  payload,\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_COUNTRIES: {\n      const { value, locations, imgs } = action.payload;\n      console.log(action);\n      const { countries } = state;\n      let newCountries = [];\n      let newLocations = [];\n      let newImgs = [];\n      if (countries.length > 0) {\n        if (value === '-') {\n          newCountries = null;\n          newLocations = null;\n          newImgs = null;\n        } else {\n          countries.forEach((c, index) => {\n            if (c === value) {\n              newCountries.push(c);\n              newLocations.push(locations[index]);\n              newImgs.push(imgs[index]);\n            }\n          });\n        }\n      }\n      return {\n        countriesFiltered: newCountries,\n        locationsFiltered: newLocations,\n        imgsFiltered: newImgs,\n        value,\n        countries,\n      };\n    }\n    case FILTER_REFRESH: {\n      const { value, countries } = state;\n      let newCountries = countries;\n      if (countries) {\n        if (countries.length > 0) {\n          if (value !== '-') {\n            newCountries = [];\n            countries.forEach((c) => {\n              if (c.category === value) {\n                newCountries.push(c);\n              }\n            });\n          }\n        }\n      }\n\n      return {\n        countriesFiltered: newCountries,\n        value,\n        countries,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport locationsReducer from './locations/locations';\nimport filtersReducer from './filter/filter';\n\nconst reducer = combineReducers({\n  locationsReducer,\n  filtersReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\n\nexport default store;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Card(props) {\n  const { img, cities, country } = props;\n  const city = cities;\n  const {\n    temp, tempMax, tempMin, main,\n  } = city;\n  return (\n    <div className=\"card\">\n      <img src={img} alt=\"imagecountry\" className=\"img-country\" />\n      <h4 className=\"name-country\">{country}</h4>\n      <h5 className=\"temperature-country\">{temp}</h5>\n      <h5 className=\"main-country\">{main}</h5>\n      <div className=\"max-min\">\n        <h6 className=\"temperature-min-country\">{tempMin}</h6>\n        <h6 className=\"temperature-max-country\">{tempMax}</h6>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\nCard.propTypes = { img: PropTypes.string.isRequired };\nCard.propTypes = { cities: PropTypes.string.isRequired };\nCard.propTypes = { country: PropTypes.string.isRequired };\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport { filterCountries } from '../redux/filter/filter';\n\nfunction Displayer() {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { filtersReducer } = useSelector((state) => state);\n  const { countries, imgs, locations } = locationsReducer;\n  const { countriesFiltered, locationsFiltered, imgsFiltered } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [locationsOld, setLocationsOld] = useState(null);\n  const [imgsOld, setImgsOld] = useState(null);\n\n  const filter = (e) => {\n    const { value } = e.target;\n    const payload = { value, locations, imgs };\n    dispatch(filterCountries(payload));\n  };\n\n  useEffect(() => {\n    if (!countriesFiltered) {\n      if (countries !== countriesOld || locations !== locationsOld) {\n        setCountriesOld(countries);\n        setLocationsOld(locations);\n        setImgsOld(imgs);\n      }\n    } else if (countriesFiltered !== countriesOld) {\n      setCountriesOld(countriesFiltered);\n      setLocationsOld(locationsFiltered);\n      setImgsOld(imgsFiltered);\n    }\n  });\n\n  return (\n    <div className=\"locations-displayer\">\n      <div className=\"stats\">\n        <h6 className=\"stats\">STATS BY COUNTRY</h6>\n        <select\n          className=\"filter-category\"\n          placeholder=\"Category\"\n          onChange={filter}\n          id=\"input-category\"\n          name=\"input-category\"\n        >\n          <option value=\"-\"> - </option>\n          <option value=\"Finland\">Finland</option>\n          <option value=\"Sweden\">Sweden</option>\n          <option value=\"Norway\">Norway</option>\n          <option value=\"Denmark\">Denmark</option>\n        </select>\n      </div>\n\n      {locationsOld ? (\n        <div className=\"displayer-countries\">\n          {countriesOld.map((c, index) => (\n            <Link\n              key={c}\n              to={{\n                pathname: `${process.env.PUBLIC_URL}/Details`,\n                itemProps: {\n                  countryName: c,\n                  data: locationsOld[index],\n                  img: imgsOld[index],\n                },\n              }}\n              active=\"true\"\n              exact=\"true\"\n            >\n              <Card\n                cities={locationsOld[index]}\n                img={imgsOld[index]}\n                country={c}\n              />\n            </Link>\n          ))}\n        </div>\n      ) : (\n        <h5 className=\"empty\">Empty Collection</h5>\n      )}\n    </div>\n  );\n}\n\nexport default Displayer;\n","export default __webpack_public_path__ + \"static/media/scandinavia.6c700251.png\";","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Displayer from '../components/Displayer';\nimport Scandinavia from '../imgs/scandinavia.png';\n\nconst Locations = () => (\n  <div className=\"locations\">\n    <div className=\"head\">\n      <div className=\"head-left\">\n        <img src={Scandinavia} alt=\"continent\" className=\"continent\" />\n      </div>\n      <div className=\"head-right\">\n        <h4 className=\"title\">Scandinavia</h4>\n        <h6 className=\"Countries\">4 Countries</h6>\n      </div>\n    </div>\n    <Displayer />\n  </div>\n);\nexport default Locations;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCities } from '../redux/locations/locations';\n\nfunction Details(props) {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { cities } = locationsReducer;\n  const [citiesOld, setCitiesOld] = useState(null);\n\n  const { location } = props;\n  const { itemProps } = location;\n  const { countryName, data, img } = itemProps;\n\n  useEffect(() => {\n    if (!cities) {\n      dispatch(fetchCities(data));\n    }\n    if (data !== citiesOld) {\n      setCitiesOld(data);\n    }\n  });\n\n  return (\n    <div className=\"details\">\n      <div className=\"head\">\n        <div className=\"head-left\">\n          <img src={img} alt=\"country\" className=\"continent\" />\n        </div>\n        <div className=\"head-right\">\n          <h4 className=\"title\">{countryName}</h4>\n          <h6 className=\"cities\">5 Cities</h6>\n        </div>\n      </div>\n      <div className=\"details-displayer\">\n        <div className=\"stats\">\n          <h6 className=\"stats\">CITY/TOWN BREAKDOWN</h6>\n        </div>\n        {citiesOld\n          ? citiesOld.map((c) => (\n            <div className=\"details-city\" key={c.name}>\n              <h4 className=\"city-name\">{c.name}</h4>\n              <h5 className=\"city-temp\">{c.temp}</h5>\n              <div className=\"city-max-min\">\n                <h5 className=\"city-temp-min\">{c.tempMin}</h5>\n                /\n                <h5 className=\"city-temp-max\">{c.tempMax}</h5>\n              </div>\n            </div>\n          ))\n          : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\nDetails.propTypes = { countryName: PropTypes.string.isRequired };\nDetails.propTypes = { data: PropTypes.string.isRequired };\nDetails.propTypes = { img: PropTypes.string.isRequired };\nDetails.propTypes = { location: PropTypes.string.isRequired };\n","export default __webpack_public_path__ + \"static/media/next.3cd62455.svg\";","export default __webpack_public_path__ + \"static/media/microphone.dc190fb4.svg\";","export default __webpack_public_path__ + \"static/media/settings.f17c8abf.svg\";","/* eslint-disable spaced-comment */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Next from '../imgs/next.svg';\nimport Mic from '../imgs/microphone.svg';\nimport Settings from '../imgs/settings.svg';\n\nfunction Navbar() {\n  return (\n    <nav className=\"navBar\">\n      <div className=\"header\">\n        <Link\n          key=\"home\"\n          to={`${process.env.PUBLIC_URL}/`}\n          active=\"true\"\n        >\n          <img src={Next} alt=\"return\" className=\"arrow-left\" />\n        </Link>\n        <h6 className=\"header-title\">cities</h6>\n        <img src={Mic} alt=\"mic\" className=\"mic\" />\n        <img src={Settings} alt=\"settings\" className=\"settings\" />\n      </div>\n    </nav>\n  );\n}\nexport default Navbar;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\nimport axios from 'axios';\n\nconst url = 'https://api.openweathermap.org/data/2.5/find?';\nconst appId = '7d21fcc19d2a5ea9e47384b584b78a2e';\n\nconst cities = [\n  'oulu',\n  'helsinki',\n  'tornio',\n  'kemi',\n  'lulea',\n  'uppsala',\n  'Göteborg',\n  'stockholm',\n  'oslo',\n  'tromso',\n  'vardo',\n  'bergen',\n  'copenhagen',\n  'helsingor',\n  'skagen',\n  'aalborg',\n];\n\nconst request = (city) => axios.get(`${url}q=${city}&appid=${appId}`);\n\nconst process = (result) => {\n  let location = null;\n  if (result) {\n    if (result.status === 200) {\n      const { data } = result;\n      const { list } = data;\n      // eslint-disable-next-line prefer-destructuring\n      location = list[0];\n    }\n  }\n  return location;\n};\n\nconst getLocations = async () => {\n  let locations = null;\n  const axiosOulu = request(cities[0]);\n  const axiosHelsinki = request(cities[1]);\n  const axiosTornio = request(cities[2]);\n  const axiosKemili = request(cities[3]);\n  const axiosLulea = request(cities[4]);\n  const axiosUppsala = request(cities[5]);\n  const axiosGoteborg = request(cities[6]);\n  const axiosStockholm = request(cities[7]);\n  const axioOsslo = request(cities[8]);\n  const axiosTromso = request(cities[9]);\n  const axiosVardo = request(cities[10]);\n  const axiosBergen = request(cities[11]);\n  const axiosCopenhagen = request(cities[12]);\n  const axiosHelsingor = request(cities[13]);\n  const axiosSkagen = request(cities[14]);\n  const axiosAlborg = request(cities[15]);\n\n  await axios\n    .all([\n      axiosOulu,\n      axiosHelsinki,\n      axiosTornio,\n      axiosKemili,\n      axiosLulea,\n      axiosUppsala,\n      axiosGoteborg,\n      axiosStockholm,\n      axioOsslo,\n      axiosTromso,\n      axiosVardo,\n      axiosBergen,\n      axiosCopenhagen,\n      axiosHelsingor,\n      axiosSkagen,\n      axiosAlborg,\n    ])\n    .then(\n      axios.spread(\n        (\n          res0,\n          res1,\n          res2,\n          res3,\n          res4,\n          res5,\n          res6,\n          res7,\n          res8,\n          res9,\n          res10,\n          res11,\n          res12,\n          res13,\n          res14,\n          res15,\n        ) => {\n          locations = {\n            europe: {\n              Finland: {\n                oulu: process(res0),\n                helsinki: process(res1),\n                tornio: process(res2),\n                kemili: process(res3),\n              },\n              Sweden: {\n                lulea: process(res4),\n                uppsala: process(res5),\n                goteborg: process(res6),\n                stockholm: process(res7),\n              },\n              Norway: {\n                oslo: process(res8),\n                tromso: process(res9),\n                vardo: process(res10),\n                bergen: process(res11),\n              },\n              Denmark: {\n                copenhagen: process(res12),\n                helsingor: process(res13),\n                skagen: process(res14),\n                aalborg: process(res15),\n              },\n            },\n          };\n        },\n      ),\n    );\n\n  // eslint-disable-next-line no-unused-vars\n  const countriesObject = locations.europe;\n  const keys = Object.keys(countriesObject);\n  const countriesNew = [];\n  const kelvinDifference = 273.15;\n  keys.forEach((k) => {\n    const citiesObject = countriesObject[k];\n    const citiesNew = [];\n    const cities = Object.keys(citiesObject);\n    cities.forEach((c) => {\n      const cityObject = citiesObject[c];\n      const {\n        id, name, main, rain, snow,\n      } = cityObject;\n      const { temp_max, temp_min, humidity } = main;\n      const tmpK = main.temp;\n      const tempC = (tmpK - kelvinDifference).toFixed(2);\n      const tempMaxC = (temp_max - kelvinDifference).toFixed(2);\n      const tempMinC = (temp_min - kelvinDifference).toFixed(2);\n\n      const temp = `${tempC} C `;\n      const tempMax = `${tempMaxC} C `;\n      const tempMin = `${tempMinC} C `;\n\n      const city = {\n        id,\n        name,\n        main,\n        rain,\n        snow,\n        temp,\n        tempMax,\n        tempMin,\n        humidity,\n      };\n      citiesNew.push(city);\n    });\n    countriesNew.push(citiesNew);\n  });\n  return countriesNew;\n};\nexport default { getLocations };\n","import api from '../../api/api';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\n\nexport const receiveLocations = (locations) => ({\n  type: RECEIVE_LOCATIONS,\n  locations,\n});\n\n// eslint-disable-next-line no-unused-vars\nexport const getLocations = () => (dispatch) => {\n  // eslint-disable-next-line spaced-comment\n  //let oldLocations = JSON.parse(localStorage.getItem('locations'));\n  // eslint-disable-next-line spaced-comment\n  let oldLocations = null;\n  if (!oldLocations) {\n    api.getLocations().then((locations) => {\n      console.log(locations);\n      dispatch(receiveLocations(locations));\n      // eslint-disable-next-line indent\n      // localStorage.setItem('locations', JSON.stringify(locations));\n      oldLocations = locations;\n    });\n  } else {\n    setTimeout(() => {\n      dispatch(receiveLocations(oldLocations), 1000);\n    });\n  }\n  return oldLocations;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport store from './redux/configureStore';\nimport Locations from './pages/Locations';\nimport Details from './pages/Details';\nimport NavBar from './components/Navbar';\nimport { getLocations } from './redux/api/api';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (this.props) {\n      // eslint-disable-next-line react/prop-types\n      const { getLocations } = this.props;\n      getLocations();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Locations} />\n          <Route exact path=\"/Details\" component={Details} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nexport default connect(mapStateToProps, { store, getLocations })(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
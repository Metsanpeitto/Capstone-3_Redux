{"ast":null,"code":"/* eslint-disable object-shorthand */\nimport Finland from '../../imgs/finland.png';\nimport Norway from '../../imgs/norway.png';\nimport Sweden from '../../imgs/sweden.png';\nimport Denmark from '../../imgs/denmark.png';\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\nexport const receiveLocations = locations => ({\n  type: RECEIVE_LOCATIONS,\n  locations\n});\nexport const fetchCities = cities => ({\n  type: FETCH_CITIES,\n  cities\n});\nconst initialState = {\n  countries: ['Finland', 'Sweden', 'Norway', 'Denmark'],\n  imgs: [Finland, Sweden, Norway, Denmark],\n  locations: null,\n  cities: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS:\n      {\n        const {\n          locations\n        } = action;\n        return { ...state,\n          locations\n        };\n      }\n\n    case FETCH_CITIES:\n      {\n        const {\n          cities\n        } = action;\n        return { ...state,\n          cities: cities\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/locations/locations.js"],"names":["Finland","Norway","Sweden","Denmark","RECEIVE_LOCATIONS","FETCH_CITIES","receiveLocations","locations","type","fetchCities","cities","initialState","countries","imgs","reducer","state","action"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,iBAAiB,GAAG,2CAA1B;AACA,MAAMC,YAAY,GAAG,sCAArB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,KAAgB;AAC9CC,EAAAA,IAAI,EAAEJ,iBADwC;AAE9CG,EAAAA;AAF8C,CAAhB,CAAzB;AAKP,OAAO,MAAME,WAAW,GAAIC,MAAD,KAAa;AACtCF,EAAAA,IAAI,EAAEH,YADgC;AAEtCK,EAAAA;AAFsC,CAAb,CAApB;AAKP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,SAAhC,CADQ;AAEnBC,EAAAA,IAAI,EAAE,CAACb,OAAD,EAAUE,MAAV,EAAkBD,MAAlB,EAA0BE,OAA1B,CAFa;AAGnBI,EAAAA,SAAS,EAAE,IAHQ;AAInBG,EAAAA,MAAM,EAAE;AAJW,CAArB;;AAOA,MAAMI,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKJ,iBAAL;AAAwB;AACtB,cAAM;AAAEG,UAAAA;AAAF,YAAgBS,MAAtB;AACA,eAAO,EACL,GAAGD,KADE;AACKR,UAAAA;AADL,SAAP;AAGD;;AACD,SAAKF,YAAL;AAAmB;AACjB,cAAM;AAAEK,UAAAA;AAAF,YAAaM,MAAnB;AACA,eAAO,EACL,GAAGD,KADE;AAELL,UAAAA,MAAM,EAAEA;AAFH,SAAP;AAID;;AACD;AACE,aAAOK,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["/* eslint-disable object-shorthand */\nimport Finland from '../../imgs/finland.png';\nimport Norway from '../../imgs/norway.png';\nimport Sweden from '../../imgs/sweden.png';\nimport Denmark from '../../imgs/denmark.png';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\n\nexport const receiveLocations = (locations) => ({\n  type: RECEIVE_LOCATIONS,\n  locations,\n});\n\nexport const fetchCities = (cities) => ({\n  type: FETCH_CITIES,\n  cities,\n});\n\nconst initialState = {\n  countries: ['Finland', 'Sweden', 'Norway', 'Denmark'],\n  imgs: [Finland, Sweden, Norway, Denmark],\n  locations: null,\n  cities: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS: {\n      const { locations } = action;\n      return {\n        ...state, locations,\n      };\n    }\n    case FETCH_CITIES: {\n      const { cities } = action;\n      return {\n        ...state,\n        cities: cities,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
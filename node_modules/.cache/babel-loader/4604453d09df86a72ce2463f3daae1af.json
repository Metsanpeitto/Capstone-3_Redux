{"ast":null,"code":"/*  Extract the countries and the capital to get :\n- country name\n- country temp, max-temp, min-temp, main\n-\n*/\nconst RECEIVE_LOCATIONS = \"locationStore/locations/RECEIVE_LOCATIONS\";\nconst initialState = {\n  locations: {},\n  countries: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS:\n      {\n        const {\n          locations\n        } = action;\n        const {\n          europe\n        } = locations;\n        const countries = [];\n\n        for (const country in europe) {\n          console.log(country);\n          countries = Object.keys(country);\n        }\n\n        return {\n          locations\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/locations/locations.js"],"names":["RECEIVE_LOCATIONS","initialState","locations","countries","reducer","state","action","type","europe","country","console","log","Object","keys"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,iBAAiB,GAAG,2CAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,iBAAL;AAAwB;AACtB,cAAM;AAAEE,UAAAA;AAAF,YAAgBI,MAAtB;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAaN,SAAnB;AACA,cAAMC,SAAS,GAAG,EAAlB;;AACA,aAAK,MAAMM,OAAX,IAAsBD,MAAtB,EAA8B;AAC5BE,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAN,UAAAA,SAAS,GAAGS,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAZ;AACD;;AACD,eAAO;AAAEP,UAAAA;AAAF,SAAP;AACD;;AACD;AACE,aAAOG,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["/*  Extract the countries and the capital to get :\n- country name\n- country temp, max-temp, min-temp, main\n-\n*/\nconst RECEIVE_LOCATIONS = \"locationStore/locations/RECEIVE_LOCATIONS\";\n\nconst initialState = {\n  locations: {},\n  countries: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS: {\n      const { locations } = action;\n      const { europe } = locations;\n      const countries = [];\n      for (const country in europe) {\n        console.log(country);\n        countries = Object.keys(country);\n      }\n      return { locations };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from './Card';\nimport Finland from '../imgs/finland.png';\nimport Norway from '../imgs/norway.png';\nimport Sweden from '../imgs/sweden.png';\nimport Denmark from '../imgs/denmark.png';\nimport { filterCountries } from '../redux/filter/filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Displayer() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    locationsReducer\n  } = useSelector(state => state);\n  const {\n    filtersReducer\n  } = useSelector(state => state);\n  const {\n    europe,\n    countries\n  } = locationsReducer;\n  const {\n    countriesFiltered\n  } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [displayFinland, setDisplayFinland] = useState(null);\n  const [displayNorway, setDisplayNorway] = useState(null);\n  const [displayDenmark, setDisplayDenmark] = useState(null);\n  const [displaySweden, setDisplaySweden] = useState(null);\n\n  const clearStates = () => {\n    setDisplayFinland(null);\n    setDisplayNorway(null);\n    setDisplaySweden(null);\n    setDisplayDenmark(null);\n  };\n\n  const setStates = data => {\n    if (data !== '-') {\n      data.forEach(c => {\n        if (c === 'Finland') {\n          setDisplayFinland(true);\n        }\n\n        if (c === 'Norway') {\n          setDisplayNorway(true);\n        }\n\n        if (c === 'Sweden') {\n          setDisplaySweden(true);\n        }\n\n        if (c === 'Denmark') {\n          setDisplayDenmark(true);\n        }\n      });\n    } else {\n      setDisplayFinland(true);\n      setDisplayNorway(true);\n      setDisplaySweden(true);\n      setDisplayDenmark(true);\n    }\n  };\n\n  const filter = e => {\n    const {\n      value\n    } = e.target;\n    console.log(value);\n    dispatch(filterCountries(value));\n  };\n\n  useEffect(() => {\n    console.log(countriesFiltered);\n    console.log(countries);\n\n    if (countriesFiltered === undefined) {\n      if (countries !== countriesOld) {\n        clearStates();\n        setStates(countries);\n        setCountriesOld(countries);\n      }\n    } else if (countriesFiltered !== countriesOld) {\n      clearStates();\n      setStates(countriesFiltered);\n      setCountriesOld(countriesFiltered);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locations-displayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"stats\",\n        children: \"STATS BY COUNTRY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-category\",\n        placeholder: \"Category\",\n        onChange: filter,\n        id: \"input-category\",\n        name: \"input-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"-\",\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Finland\",\n          children: \"Finland\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sweden\",\n          children: \"Sweden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Norway\",\n          children: \"Norway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Denmark\",\n          children: \"Denmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), europe ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayer-countries\",\n      children: [displayFinland ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.Finland,\n        img: Finland,\n        country: \"Finland\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this) : null, displayNorway ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.Norway,\n        img: Norway,\n        country: \"Norway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : null, displaySweden ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.Sweden,\n        img: Sweden,\n        country: \"Sweden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this) : null, displayDenmark ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.Denmark,\n        img: Denmark,\n        country: \"Denmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"empty\",\n      children: \"Empty Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Displayer, \"c/c451BK2cTt6oBsEesNjaeiAQE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Displayer;\nexport default Displayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Displayer\");","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Card","Finland","Norway","Sweden","Denmark","filterCountries","Displayer","dispatch","locationsReducer","state","filtersReducer","europe","countries","countriesFiltered","countriesOld","setCountriesOld","displayFinland","setDisplayFinland","displayNorway","setDisplayNorway","displayDenmark","setDisplayDenmark","displaySweden","setDisplaySweden","clearStates","setStates","data","forEach","c","filter","e","value","target","console","log","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from './Card';\nimport Finland from '../imgs/finland.png';\nimport Norway from '../imgs/norway.png';\nimport Sweden from '../imgs/sweden.png';\nimport Denmark from '../imgs/denmark.png';\nimport { filterCountries } from '../redux/filter/filter';\n\nfunction Displayer() {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { filtersReducer } = useSelector((state) => state);\n  const { europe, countries } = locationsReducer;\n  const { countriesFiltered } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [displayFinland, setDisplayFinland] = useState(null);\n  const [displayNorway, setDisplayNorway] = useState(null);\n  const [displayDenmark, setDisplayDenmark] = useState(null);\n  const [displaySweden, setDisplaySweden] = useState(null);\n\n  const clearStates = () => {\n    setDisplayFinland(null);\n    setDisplayNorway(null);\n    setDisplaySweden(null);\n    setDisplayDenmark(null);\n  };\n\n  const setStates = (data) => {\n    if (data !== '-') {\n      data.forEach((c) => {\n        if (c === 'Finland') {\n          setDisplayFinland(true);\n        }\n        if (c === 'Norway') {\n          setDisplayNorway(true);\n        }\n        if (c === 'Sweden') {\n          setDisplaySweden(true);\n        }\n        if (c === 'Denmark') {\n          setDisplayDenmark(true);\n        }\n      });\n    } else {\n      setDisplayFinland(true);\n      setDisplayNorway(true);\n      setDisplaySweden(true);\n      setDisplayDenmark(true);\n    }\n  };\n\n  const filter = (e) => {\n    const { value } = e.target;\n    console.log(value);\n    dispatch(filterCountries(value));\n  };\n\n  useEffect(() => {\n    console.log(countriesFiltered);\n    console.log(countries);\n    if (countriesFiltered === undefined) {\n      if (countries !== countriesOld) {\n        clearStates();\n        setStates(countries);\n        setCountriesOld(countries);\n      }\n    } else if (countriesFiltered !== countriesOld) {\n      clearStates();\n      setStates(countriesFiltered);\n      setCountriesOld(countriesFiltered);\n    }\n  });\n\n  return (\n    <div className=\"locations-displayer\">\n      <div className=\"stats\">\n        <h6 className=\"stats\">STATS BY COUNTRY</h6>\n        <select\n          className=\"filter-category\"\n          placeholder=\"Category\"\n          onChange={filter}\n          id=\"input-category\"\n          name=\"input-category\"\n        >\n          <option value=\"-\"> - </option>\n          <option value=\"Finland\">Finland</option>\n          <option value=\"Sweden\">Sweden</option>\n          <option value=\"Norway\">Norway</option>\n          <option value=\"Denmark\">Denmark</option>\n        </select>\n      </div>\n\n      {europe ? (\n        <div className=\"displayer-countries\">\n          {displayFinland ? (\n            <Card data={europe.Finland} img={Finland} country=\"Finland\" />\n          ) : null}\n          {displayNorway ? (\n            <Card data={europe.Norway} img={Norway} country=\"Norway\" />\n          ) : null}\n          {displaySweden ? (\n            <Card data={europe.Sweden} img={Sweden} country=\"Sweden\" />\n          ) : null}\n\n          {displayDenmark ? (\n            <Card data={europe.Denmark} img={Denmark} country=\"Denmark\" />\n          ) : null}\n        </div>\n      ) : (\n        <h5 className=\"empty\">Empty Collection</h5>\n      )}\n    </div>\n  );\n}\n\nexport default Displayer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import api from'../../api/api';var RECEIVE_LOCATIONS='locationStore/locations/RECEIVE_LOCATIONS';export var receiveLocations=function receiveLocations(locations){return{type:RECEIVE_LOCATIONS,locations:locations};};// eslint-disable-next-line no-unused-vars\nexport var getLocations=function getLocations(){return function(dispatch){// eslint-disable-next-line spaced-comment\n//let oldLocations = JSON.parse(localStorage.getItem('locations'));\n// eslint-disable-next-line spaced-comment\nvar oldLocations=null;if(!oldLocations){api.getLocations().then(function(locations){console.log(locations);dispatch(receiveLocations(locations));// eslint-disable-next-line indent\n// localStorage.setItem('locations', JSON.stringify(locations));\noldLocations=locations;});}else{setTimeout(function(){dispatch(receiveLocations(oldLocations),1000);});}return oldLocations;};};","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/api/api.js"],"names":["api","RECEIVE_LOCATIONS","receiveLocations","locations","type","getLocations","dispatch","oldLocations","then","console","log","setTimeout"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,KAAgB,eAAhB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,2CAA1B,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,SAAD,QAAgB,CAC9CC,IAAI,CAAEH,iBADwC,CAE9CE,SAAS,CAATA,SAF8C,CAAhB,EAAzB,CAKP;AACA,MAAO,IAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAM,UAACC,QAAD,CAAc,CAC9C;AACA;AACA;AACA,GAAIC,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAI,CAACA,YAAL,CAAmB,CACjBP,GAAG,CAACK,YAAJ,GAAmBG,IAAnB,CAAwB,SAACL,SAAD,CAAe,CACrCM,OAAO,CAACC,GAAR,CAAYP,SAAZ,EACAG,QAAQ,CAACJ,gBAAgB,CAACC,SAAD,CAAjB,CAAR,CACA;AACA;AACAI,YAAY,CAAGJ,SAAf,CACD,CAND,EAOD,CARD,IAQO,CACLQ,UAAU,CAAC,UAAM,CACfL,QAAQ,CAACJ,gBAAgB,CAACK,YAAD,CAAjB,CAAiC,IAAjC,CAAR,CACD,CAFS,CAAV,CAGD,CACD,MAAOA,CAAAA,YAAP,CACD,CAnB2B,EAArB","sourcesContent":["import api from '../../api/api';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\n\nexport const receiveLocations = (locations) => ({\n  type: RECEIVE_LOCATIONS,\n  locations,\n});\n\n// eslint-disable-next-line no-unused-vars\nexport const getLocations = () => (dispatch) => {\n  // eslint-disable-next-line spaced-comment\n  //let oldLocations = JSON.parse(localStorage.getItem('locations'));\n  // eslint-disable-next-line spaced-comment\n  let oldLocations = null;\n  if (!oldLocations) {\n    api.getLocations().then((locations) => {\n      console.log(locations);\n      dispatch(receiveLocations(locations));\n      // eslint-disable-next-line indent\n      // localStorage.setItem('locations', JSON.stringify(locations));\n      oldLocations = locations;\n    });\n  } else {\n    setTimeout(() => {\n      dispatch(receiveLocations(oldLocations), 1000);\n    });\n  }\n  return oldLocations;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable object-shorthand */import Finland from'../../imgs/finland.png';import Norway from'../../imgs/norway.png';import Sweden from'../../imgs/sweden.png';import Denmark from'../../imgs/denmark.png';var RECEIVE_LOCATIONS='locationStore/locations/RECEIVE_LOCATIONS';var FETCH_CITIES='locationStore/locations/FETCH_CITIES';export var fetchCities=function fetchCities(cities){return{type:FETCH_CITIES,cities:cities};};var initialState={countries:['Finland','Sweden','Norway','Denmark'],imgs:[Finland,Sweden,Norway,Denmark],locations:null,cities:null};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case RECEIVE_LOCATIONS:{var locations=action.locations;return _objectSpread(_objectSpread({},state),{},{locations:locations});}case FETCH_CITIES:{var cities=action.cities;return _objectSpread(_objectSpread({},state),{},{cities:cities});}default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/locations/locations.js"],"names":["Finland","Norway","Sweden","Denmark","RECEIVE_LOCATIONS","FETCH_CITIES","fetchCities","cities","type","initialState","countries","imgs","locations","reducer","state","action"],"mappings":"qMAAA,qCACA,MAAOA,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,2CAA1B,CACA,GAAMC,CAAAA,YAAY,CAAG,sCAArB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,MAAD,QAAa,CACtCC,IAAI,CAAEH,YADgC,CAEtCE,MAAM,CAANA,MAFsC,CAAb,EAApB,CAKP,GAAME,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,CAAC,SAAD,CAAY,QAAZ,CAAsB,QAAtB,CAAgC,SAAhC,CADQ,CAEnBC,IAAI,CAAE,CAACX,OAAD,CAAUE,MAAV,CAAkBD,MAAlB,CAA0BE,OAA1B,CAFa,CAGnBS,SAAS,CAAE,IAHQ,CAInBL,MAAM,CAAE,IAJW,CAArB,CAOA,GAAMM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAChD,OAAQA,MAAM,CAACP,IAAf,EACE,IAAKJ,CAAAA,iBAAL,CAAwB,CACtB,GAAQQ,CAAAA,SAAR,CAAsBG,MAAtB,CAAQH,SAAR,CACA,sCACKE,KADL,MACYF,SAAS,CAATA,SADZ,GAGD,CACD,IAAKP,CAAAA,YAAL,CAAmB,CACjB,GAAQE,CAAAA,MAAR,CAAmBQ,MAAnB,CAAQR,MAAR,CACA,sCACKO,KADL,MAEEP,MAAM,CAAEA,MAFV,GAID,CACD,QACE,MAAOO,CAAAA,KAAP,CAfJ,CAiBD,CAlBD,CAoBA,cAAeD,CAAAA,OAAf","sourcesContent":["/* eslint-disable object-shorthand */\nimport Finland from '../../imgs/finland.png';\nimport Norway from '../../imgs/norway.png';\nimport Sweden from '../../imgs/sweden.png';\nimport Denmark from '../../imgs/denmark.png';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\n\nexport const fetchCities = (cities) => ({\n  type: FETCH_CITIES,\n  cities,\n});\n\nconst initialState = {\n  countries: ['Finland', 'Sweden', 'Norway', 'Denmark'],\n  imgs: [Finland, Sweden, Norway, Denmark],\n  locations: null,\n  cities: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS: {\n      const { locations } = action;\n      return {\n        ...state, locations,\n      };\n    }\n    case FETCH_CITIES: {\n      const { cities } = action;\n      return {\n        ...state,\n        cities: cities,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
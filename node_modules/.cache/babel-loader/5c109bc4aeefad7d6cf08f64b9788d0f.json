{"ast":null,"code":"/*  Extract the countries and the capital to get :\n- country name\n- country temp, max-temp, min-temp, main\n-\n*/\nimport Finland from '../imgs/finland.png';\nimport Norway from '../imgs/norway.png';\nimport Sweden from '../imgs/sweden.png';\nimport Denmark from '../imgs/denmark.png';\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\nexport const fetchCities = cities => ({\n  type: FETCH_CITIES,\n  cities\n});\nconst initialState = {\n  countries: ['Denmark', 'Finland', 'Norway', 'Sweden'],\n  imgs: [Denmark, Finland, Norway, Sweden],\n  locations: null,\n  cities: null\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case RECEIVE_LOCATIONS:\n      {\n        const {\n          locations\n        } = action;\n        return { ...state,\n          locations\n        };\n      }\n\n    case FETCH_CITIES:\n      {\n        const {\n          cities\n        } = action;\n        const {\n          countries,\n          europe\n        } = state;\n        return {\n          europe,\n          countries,\n          cities\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/locations/locations.js"],"names":["Finland","Norway","Sweden","Denmark","RECEIVE_LOCATIONS","FETCH_CITIES","fetchCities","cities","type","initialState","countries","imgs","locations","reducer","state","action","console","log","europe"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,MAAMC,iBAAiB,GAAG,2CAA1B;AACA,MAAMC,YAAY,GAAG,sCAArB;AAEA,OAAO,MAAMC,WAAW,GAAIC,MAAD,KAAa;AACtCC,EAAAA,IAAI,EAAEH,YADgC;AAEtCE,EAAAA;AAFsC,CAAb,CAApB;AAKP,MAAME,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,QAAjC,CADQ;AAEnBC,EAAAA,IAAI,EAAE,CAACR,OAAD,EAAUH,OAAV,EAAmBC,MAAnB,EAA2BC,MAA3B,CAFa;AAGnBU,EAAAA,SAAS,EAAE,IAHQ;AAInBL,EAAAA,MAAM,EAAE;AAJW,CAArB;;AAOA,MAAMM,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKJ,iBAAL;AAAwB;AACtB,cAAM;AAAEQ,UAAAA;AAAF,YAAgBG,MAAtB;AACA,eAAO,EAAE,GAAGD,KAAL;AAAYF,UAAAA;AAAZ,SAAP;AACD;;AACD,SAAKP,YAAL;AAAmB;AACjB,cAAM;AAAEE,UAAAA;AAAF,YAAaQ,MAAnB;AACA,cAAM;AAAEL,UAAAA,SAAF;AAAaQ,UAAAA;AAAb,YAAwBJ,KAA9B;AACA,eAAO;AAAEI,UAAAA,MAAF;AAAUR,UAAAA,SAAV;AAAqBH,UAAAA;AAArB,SAAP;AACD;;AACD;AACE,aAAOO,KAAP;AAXJ;AAaD,CAfD;;AAiBA,eAAeD,OAAf","sourcesContent":["/*  Extract the countries and the capital to get :\n- country name\n- country temp, max-temp, min-temp, main\n-\n*/\nimport Finland from '../imgs/finland.png';\nimport Norway from '../imgs/norway.png';\nimport Sweden from '../imgs/sweden.png';\nimport Denmark from '../imgs/denmark.png';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\n\nexport const fetchCities = (cities) => ({\n  type: FETCH_CITIES,\n  cities,\n});\n\nconst initialState = {\n  countries: ['Denmark', 'Finland', 'Norway', 'Sweden'],\n  imgs: [Denmark, Finland, Norway, Sweden],\n  locations: null,\n  cities: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case RECEIVE_LOCATIONS: {\n      const { locations } = action;\n      return { ...state, locations };\n    }\n    case FETCH_CITIES: {\n      const { cities } = action;\n      const { countries, europe } = state;\n      return { europe, countries, cities };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
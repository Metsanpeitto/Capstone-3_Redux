{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/pages/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCities } from '../redux/locations/locations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Details(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    locationsReducer\n  } = useSelector(state => state);\n  const {\n    cities\n  } = locationsReducer;\n  const [citiesOld, setCitiesOld] = useState(null); // eslint-disable-next-line no-unused-vars\n  // eslint-disable-next-line react/prop-types\n\n  const {\n    location\n  } = props; // eslint-disable-next-line react/prop-types\n\n  const {\n    itemProps\n  } = location; // eslint-disable-next-line react/prop-types\n\n  const {\n    countryName,\n    data,\n    src\n  } = itemProps;\n  console.log(data);\n  console.log(cities);\n  useEffect(() => {\n    if (!cities) {\n      dispatch(fetchCities(data));\n    }\n\n    if (data !== citiesOld) {\n      setCitiesOld(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: src,\n        alt: \"country\",\n        className: \"country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"details-title\",\n          children: countryName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"cities\",\n          children: \"5 Cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Details, \"ctf1oWAVnEjmMCSp3qdgV8TvlyM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Details;\nexport default Details;\nDetails.propTypes = {\n  countryName: PropTypes.string.isRequired\n};\nDetails.propTypes = {\n  data: PropTypes.string.isRequired\n};\nDetails.propTypes = {\n  src: PropTypes.string.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/pages/Details.js"],"names":["React","useState","useEffect","useDispatch","useSelector","PropTypes","fetchCities","Details","props","dispatch","locationsReducer","state","cities","citiesOld","setCitiesOld","location","itemProps","countryName","data","src","console","log","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAuBN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaF,gBAAnB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C,CAJsB,CAMtB;AACA;;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeP,KAArB,CARsB,CAStB;;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAgBD,QAAtB,CAVsB,CAWtB;;AACA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,MAA6BH,SAAnC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,MAAL,EAAa;AACXH,MAAAA,QAAQ,CAACH,WAAW,CAACY,IAAD,CAAZ,CAAR;AACD;;AACD,QAAIA,IAAI,KAAKL,SAAb,EAAwB;AACtBC,MAAAA,YAAY,CAACI,IAAD,CAAZ;AACD;AACF,GAPQ,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC,GAAV;AAAe,QAAA,GAAG,EAAC,SAAnB;AAA6B,QAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBAA+BF;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAnDQV,O;UACUJ,W,EACYC,W;;;KAFtBG,O;AAqDT,eAAeA,OAAf;AACAA,OAAO,CAACe,SAAR,GAAoB;AAAEL,EAAAA,WAAW,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC;AAAhC,CAApB;AACAjB,OAAO,CAACe,SAAR,GAAoB;AAAEJ,EAAAA,IAAI,EAAEb,SAAS,CAACkB,MAAV,CAAiBC;AAAzB,CAApB;AACAjB,OAAO,CAACe,SAAR,GAAoB;AAAEH,EAAAA,GAAG,EAAEd,SAAS,CAACkB,MAAV,CAAiBC;AAAxB,CAApB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCities } from '../redux/locations/locations';\n\nfunction Details(props) {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { cities } = locationsReducer;\n  const [citiesOld, setCitiesOld] = useState(null);\n\n  // eslint-disable-next-line no-unused-vars\n  // eslint-disable-next-line react/prop-types\n  const { location } = props;\n  // eslint-disable-next-line react/prop-types\n  const { itemProps } = location;\n  // eslint-disable-next-line react/prop-types\n  const { countryName, data, src } = itemProps;\n  console.log(data);\n  console.log(cities);\n  useEffect(() => {\n    if (!cities) {\n      dispatch(fetchCities(data));\n    }\n    if (data !== citiesOld) {\n      setCitiesOld(data);\n    }\n  });\n\n  return (\n    <div className=\"details\">\n      <div className=\"details-head\">\n        <img src={src} alt=\"country\" className=\"country\" />\n        <div className=\"details-data\">\n          <h4 className=\"details-title\">{countryName}</h4>\n          <h6 className=\"cities\">5 Cities</h6>\n        </div>\n        <div>\n          {/* {citiesOld\n            ? citiesOld.map((c) => (\n              <div key={c.name}>\n                <h4 className=\"city-name\">{c.name}</h4>\n                <h5 className=\"city-temp\">{c.temp}</h5>\n                <h5 className=\"city-main\">{c.weather[0].main}</h5>\n                <div className=\"city-max-min\">\n                  <h5 className=\"city-temp-min\">{c.temp_min}</h5>\n                  /\n                  <h5 className=\"city-temp-max\">{c.temp_max}</h5>\n                </div>\n              </div>\n            ))\n            : null} */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\nDetails.propTypes = { countryName: PropTypes.string.isRequired };\nDetails.propTypes = { data: PropTypes.string.isRequired };\nDetails.propTypes = { src: PropTypes.string.isRequired };\n"]},"metadata":{},"sourceType":"module"}
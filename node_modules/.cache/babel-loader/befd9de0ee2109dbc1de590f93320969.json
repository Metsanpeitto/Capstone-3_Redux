{"ast":null,"code":"/* eslint-disable object-shorthand */\nimport Finland from '../../imgs/finland.png';\nimport Norway from '../../imgs/norway.png';\nimport Sweden from '../../imgs/sweden.png';\nimport Denmark from '../../imgs/denmark.png';\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\nexport const fetchCities = payload => ({\n  type: FETCH_CITIES,\n  payload\n});\nconst initialState = {\n  countries: ['Denmark', 'Finland', 'Norway', 'Sweden'],\n  imgs: [Denmark, Finland, Norway, Sweden],\n  locations: null,\n  cities: null\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS:\n      {\n        const {\n          locations\n        } = action;\n        console.log(locations);\n        return {\n          locations\n        };\n      }\n\n    case FETCH_CITIES:\n      {\n        const {\n          cities\n        } = action;\n        return {\n          cities: cities\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/locations/locations.js"],"names":["Finland","Norway","Sweden","Denmark","RECEIVE_LOCATIONS","FETCH_CITIES","fetchCities","payload","type","initialState","countries","imgs","locations","cities","reducer","state","action","console","log"],"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,iBAAiB,GAAG,2CAA1B;AACA,MAAMC,YAAY,GAAG,sCAArB;AAEA,OAAO,MAAMC,WAAW,GAAIC,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAEH,YADiC;AAEvCE,EAAAA;AAFuC,CAAd,CAApB;AAKP,MAAME,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,QAAjC,CADQ;AAEnBC,EAAAA,IAAI,EAAE,CAACR,OAAD,EAAUH,OAAV,EAAmBC,MAAnB,EAA2BC,MAA3B,CAFa;AAGnBU,EAAAA,SAAS,EAAE,IAHQ;AAInBC,EAAAA,MAAM,EAAE;AAJW,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKJ,iBAAL;AAAwB;AACtB,cAAM;AAAEQ,UAAAA;AAAF,YAAgBI,MAAtB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACA,eAAO;AACLA,UAAAA;AADK,SAAP;AAGD;;AACD,SAAKP,YAAL;AAAmB;AACjB,cAAM;AAAEQ,UAAAA;AAAF,YAAaG,MAAnB;AACA,eAAO;AACLH,UAAAA,MAAM,EAAEA;AADH,SAAP;AAGD;;AACD;AACE,aAAOE,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["/* eslint-disable object-shorthand */\nimport Finland from '../../imgs/finland.png';\nimport Norway from '../../imgs/norway.png';\nimport Sweden from '../../imgs/sweden.png';\nimport Denmark from '../../imgs/denmark.png';\n\nconst RECEIVE_LOCATIONS = 'locationStore/locations/RECEIVE_LOCATIONS';\nconst FETCH_CITIES = 'locationStore/locations/FETCH_CITIES';\n\nexport const fetchCities = (payload) => ({\n  type: FETCH_CITIES,\n  payload,\n});\n\nconst initialState = {\n  countries: ['Denmark', 'Finland', 'Norway', 'Sweden'],\n  imgs: [Denmark, Finland, Norway, Sweden],\n  locations: null,\n  cities: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_LOCATIONS: {\n      const { locations } = action;\n      console.log(locations);\n      return {\n        locations,\n      };\n    }\n    case FETCH_CITIES: {\n      const { cities } = action;\n      return {\n        cities: cities,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
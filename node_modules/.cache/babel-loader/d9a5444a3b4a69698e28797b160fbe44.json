{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport { filterCountries } from '../redux/filter/filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Displayer() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    locationsReducer\n  } = useSelector(state => state);\n  const {\n    filtersReducer\n  } = useSelector(state => state);\n  const {\n    countries,\n    imgs,\n    locations\n  } = locationsReducer;\n  const {\n    countriesFiltered\n  } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [locationsOld, setLocationsOld] = useState(null);\n\n  const filter = e => {\n    const {\n      value\n    } = e.target;\n    dispatch(filterCountries(value, locations));\n  };\n\n  useEffect(() => {\n    console.log(countriesOld);\n    console.log(locations);\n\n    if (!countriesFiltered) {\n      if (countries !== countriesOld) {\n        setCountriesOld(countries);\n      }\n    } else if (countriesFiltered !== countriesOld) {\n      setCountriesOld(countriesFiltered);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locations-displayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"stats\",\n        children: \"STATS BY COUNTRY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-category\",\n        placeholder: \"Category\",\n        onChange: filter,\n        id: \"input-category\",\n        name: \"input-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"-\",\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Finland\",\n          children: \"Finland\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Sweden\",\n          children: \"Sweden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Norway\",\n          children: \"Norway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Denmark\",\n          children: \"Denmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), locations ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayer-countries\",\n      children: countriesOld.map((c, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: '/Details',\n          itemProps: {\n            countryName: c,\n            data: locations[index],\n            img: imgs[index]\n          }\n        },\n        active: \"true\",\n        exact: \"true\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          cities: locations[index],\n          img: imgs[index],\n          country: c\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, countries[index], false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"empty\",\n      children: \"Empty Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Displayer, \"BfFikRoslNX8uoTDruHexkOf5oI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Displayer;\nexport default Displayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Displayer\");","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Card","filterCountries","Displayer","dispatch","locationsReducer","state","filtersReducer","countries","imgs","locations","countriesFiltered","countriesOld","setCountriesOld","locationsOld","setLocationsOld","filter","e","value","target","console","log","map","c","index","pathname","itemProps","countryName","data","img"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport { filterCountries } from '../redux/filter/filter';\n\nfunction Displayer() {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { filtersReducer } = useSelector((state) => state);\n  const { countries, imgs, locations } = locationsReducer;\n  const { countriesFiltered } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [locationsOld, setLocationsOld] = useState(null);\n\n  const filter = (e) => {\n    const { value } = e.target;\n    dispatch(filterCountries(value, locations));\n  };\n\n  useEffect(() => {\n    console.log(countriesOld);\n    console.log(locations);\n    if (!countriesFiltered) {\n      if (countries !== countriesOld) {\n        setCountriesOld(countries);\n      }\n    } else if (countriesFiltered !== countriesOld) {\n      setCountriesOld(countriesFiltered);\n    }\n  });\n\n  return (\n    <div className=\"locations-displayer\">\n      <div className=\"stats\">\n        <h6 className=\"stats\">STATS BY COUNTRY</h6>\n        <select\n          className=\"filter-category\"\n          placeholder=\"Category\"\n          onChange={filter}\n          id=\"input-category\"\n          name=\"input-category\"\n        >\n          <option value=\"-\"> - </option>\n          <option value=\"Finland\">Finland</option>\n          <option value=\"Sweden\">Sweden</option>\n          <option value=\"Norway\">Norway</option>\n          <option value=\"Denmark\">Denmark</option>\n        </select>\n      </div>\n\n      {locations ? (\n        <div className=\"displayer-countries\">\n          {countriesOld.map((c, index) => (\n            <Link\n              key={countries[index]}\n              to={{\n                pathname: '/Details',\n                itemProps: {\n                  countryName: c,\n                  data: locations[index],\n                  img: imgs[index],\n                },\n              }}\n              active=\"true\"\n              exact=\"true\"\n            >\n              <Card\n                cities={locations[index]}\n                img={imgs[index]}\n                country={c}\n              />\n            </Link>\n          ))}\n        </div>\n      ) : (\n        <h5 className=\"empty\">Empty Collection</h5>\n      )}\n    </div>\n  );\n}\n\nexport default Displayer;\n"]},"metadata":{},"sourceType":"module"}
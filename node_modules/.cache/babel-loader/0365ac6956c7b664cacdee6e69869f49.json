{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from './Card';\nimport Finland from '../imgs/finland.png';\nimport Norway from '../imgs/norway.png';\nimport Sweden from '../imgs/sweden.png';\nimport Denmark from '../imgs/denmark.png';\nimport { filterCountries } from '../redux/filter/filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Displayer() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    locationsReducer\n  } = useSelector(state => state);\n  const {\n    filtersReducer\n  } = useSelector(state => state);\n  const {\n    europe,\n    countries\n  } = locationsReducer;\n  const {\n    filterCountries\n  } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [displayFinland, setDisplayFinland] = useState(null);\n  const [displayNorway, setDisplayNorway] = useState(null);\n  const [displayDenmark, setDisplayDenmark] = useState(null);\n  const [displaySweden, setDisplaySweden] = useState(null);\n\n  const clearStates = () => {\n    setDisplayFinland(null);\n    setDisplayNorway(null);\n    setDisplaySweden(null);\n    setDisplayDenmark(null);\n  };\n\n  const setStates = c => {\n    countries.foreach(c => {\n      console.log(c);\n\n      if (c === 'Finland') {\n        setDisplayFinland(true);\n      }\n\n      if (c === 'Norway') {\n        setDisplayNorway(true);\n      }\n\n      if (c === 'Sweden') {\n        setDisplaySweden(true);\n      }\n\n      if (c === 'Denmark') {\n        setDisplayDenmark(true);\n      }\n    });\n  };\n\n  const filter = e => {\n    const {\n      value\n    } = e.target;\n    const data = {\n      value\n    };\n    dispatch(filterCountries(data));\n  };\n\n  useEffect(() => {\n    if (!filterCountries) {\n      if (countries !== countriesOld) {\n        clearStates();\n        setStates(countries);\n        setCountriesOld(countries);\n      }\n    } else if (countries !== countriesOld) {\n      clearStates();\n      setStates(countries);\n      setCountriesOld(countries);\n    }\n\n    console.log(countries);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"locations-displayer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"stats\",\n        children: \"STATS BY COUNTRY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-category\",\n        placeholder: \"Category\",\n        onChange: filter,\n        id: \"input-category\",\n        name: \"input-category\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"-\",\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"finland\",\n          children: \"Finland\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sweden\",\n          children: \"Sweden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"norway\",\n          children: \"Norway\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"denmark\",\n          children: \"Denmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), europe ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayer-countries\",\n      children: [countriesOld ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.finland,\n        img: Finland,\n        country: \"Finland\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this) : null, displayNorway ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.norway,\n        img: Norway,\n        country: \"Norway\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this) : null, displaySweden ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.sweden,\n        img: Sweden,\n        country: \"Sweden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : null, displayDenmark ? /*#__PURE__*/_jsxDEV(Card, {\n        data: europe.denmark,\n        img: Denmark,\n        country: \"Denmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"empty\",\n      children: \"Empty Collection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Displayer, \"c/c451BK2cTt6oBsEesNjaeiAQE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Displayer;\nexport default Displayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Displayer\");","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Card","Finland","Norway","Sweden","Denmark","filterCountries","Displayer","dispatch","locationsReducer","state","filtersReducer","europe","countries","countriesOld","setCountriesOld","displayFinland","setDisplayFinland","displayNorway","setDisplayNorway","displayDenmark","setDisplayDenmark","displaySweden","setDisplaySweden","clearStates","setStates","c","foreach","console","log","filter","e","value","target","data","finland","norway","sweden","denmark"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from './Card';\nimport Finland from '../imgs/finland.png';\nimport Norway from '../imgs/norway.png';\nimport Sweden from '../imgs/sweden.png';\nimport Denmark from '../imgs/denmark.png';\nimport { filterCountries } from '../redux/filter/filter';\n\nfunction Displayer() {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { filtersReducer } = useSelector((state) => state);\n  const { europe, countries } = locationsReducer;\n  const { filterCountries } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n  const [displayFinland, setDisplayFinland] = useState(null);\n  const [displayNorway, setDisplayNorway] = useState(null);\n  const [displayDenmark, setDisplayDenmark] = useState(null);\n  const [displaySweden, setDisplaySweden] = useState(null);\n\n  const clearStates = () => {\n    setDisplayFinland(null);\n    setDisplayNorway(null);\n    setDisplaySweden(null);\n    setDisplayDenmark(null);\n  };\n\n  const setStates = (c) => {\n    countries.foreach((c) => {\n      console.log(c);\n      if (c === 'Finland') {\n        setDisplayFinland(true);\n      }\n      if (c === 'Norway') {\n        setDisplayNorway(true);\n      }\n      if (c === 'Sweden') {\n        setDisplaySweden(true);\n      }\n      if (c === 'Denmark') {\n        setDisplayDenmark(true);\n      }\n    });\n  };\n\n  const filter = (e) => {\n    const { value } = e.target;\n    const data = { value };\n    dispatch(filterCountries(data));\n  };\n\n  useEffect(() => {\n    if (!filterCountries) {\n      if (countries !== countriesOld) {\n        clearStates();\n        setStates(countries);\n        setCountriesOld(countries);\n      }\n    } else if (countries !== countriesOld) {\n      clearStates();\n      setStates(countries);\n      setCountriesOld(countries);\n    }\n    console.log(countries);\n  });\n\n  return (\n    <div className=\"locations-displayer\">\n      <div className=\"stats\">\n        <h6 className=\"stats\">STATS BY COUNTRY</h6>\n        <select\n          className=\"filter-category\"\n          placeholder=\"Category\"\n          onChange={filter}\n          id=\"input-category\"\n          name=\"input-category\"\n        >\n          <option value=\"-\"> - </option>\n          <option value=\"finland\">Finland</option>\n          <option value=\"sweden\">Sweden</option>\n          <option value=\"norway\">Norway</option>\n          <option value=\"denmark\">Denmark</option>\n        </select>\n      </div>\n\n      {europe ? (\n        <div className=\"displayer-countries\">\n          {countriesOld ? (\n            <Card data={europe.finland} img={Finland} country=\"Finland\" />\n          ) : null}\n          {displayNorway ? (\n            <Card data={europe.norway} img={Norway} country=\"Norway\" />\n          ) : null}\n          {displaySweden ? (\n            <Card data={europe.sweden} img={Sweden} country=\"Sweden\" />\n          ) : null}\n\n          {displayDenmark ? (\n            <Card data={europe.denmark} img={Denmark} country=\"Denmark\" />\n          ) : null}\n        </div>\n      ) : (\n        <h5 className=\"empty\">Empty Collection</h5>\n      )}\n    </div>\n  );\n}\n\nexport default Displayer;\n"]},"metadata":{},"sourceType":"module"}
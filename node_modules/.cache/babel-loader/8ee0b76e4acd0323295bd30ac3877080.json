{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://api.openweathermap.org/data/2.5/find?';\nconst appId = '7d21fcc19d2a5ea9e47384b584b78a2e';\nconst cities = ['oulu', 'helsinki', 'tornio', 'kemili', 'lulea', 'uppsala', 'goteborg', 'stockholm', 'oslo', 'tromso', 'vardo', 'bergen', 'copenhagen', 'helsingor', 'skagen', 'alborg'];\n\nconst request = async city => axios.get(`${url}q=${city}&appid=${appId}`).then(result => {\n  let location = null;\n\n  if (result) {\n    if (result.status === 200) {\n      const {\n        data\n      } = result;\n      const {\n        list\n      } = data; // eslint-disable-next-line prefer-destructuring\n\n      location = list[0];\n    }\n  }\n\n  return location;\n});\n\nconst process = result => {\n  let location = null;\n\n  if (result.status === 200) {\n    const {\n      data\n    } = result;\n    const {\n      list\n    } = data; // eslint-disable-next-line prefer-destructuring\n\n    location = list[0];\n  }\n\n  return location;\n};\n\nconst getLocations = async () => {\n  const axiosOulu = request(cities[0]);\n  const axiosHelsinki = request(cities[1]);\n  const axiosTornio = request(cities[2]);\n  const axiosKemili = request(cities[3]);\n  const axiosLulea = request(cities[4]);\n  const axiosUppsala = request(cities[5]);\n  const axiosGoteborg = request(cities[6]);\n  const axiosStockholm = request(cities[7]);\n  const axioOsslo = request(cities[8]);\n  const axiosTromso = request(cities[9]);\n  const axiosVardo = request(cities[10]);\n  const axiosBergen = request(cities[11]);\n  const axiosCopenhagen = request(cities[12]);\n  const axiosHelsingor = request(cities[13]);\n  const axiosSkagen = request(cities[14]);\n  const axiosAlborg = request(cities[15]);\n  await axios.all([axiosOulu, axiosHelsinki, axiosTornio, axiosKemili, axiosLulea, axiosUppsala, axiosGoteborg, axiosStockholm, axioOsslo, axiosTromso, axiosVardo, axiosBergen, axiosCopenhagen, axiosHelsingor, axiosSkagen, axiosAlborg]).then(axios.spread((res0, res1, res2, res3, res4, res5, res6, res7, res8, res9, res10, res11, res12, res13, res14, res15) => {\n    process(res0);\n    process(res1);\n    process(res2);\n    process(res3);\n    process(res4);\n    process(res5);\n    process(res6);\n    process(res7);\n    process(res8);\n    process(res9);\n    process(res10);\n    process(res11);\n    process(res12);\n    process(res13);\n    process(res14);\n    process(res15);\n  }));\n};\n\nexport default {\n  getLocations\n};","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/api/api.js"],"names":["axios","url","appId","cities","request","city","get","then","result","location","status","data","list","process","getLocations","axiosOulu","axiosHelsinki","axiosTornio","axiosKemili","axiosLulea","axiosUppsala","axiosGoteborg","axiosStockholm","axioOsslo","axiosTromso","axiosVardo","axiosBergen","axiosCopenhagen","axiosHelsingor","axiosSkagen","axiosAlborg","all","spread","res0","res1","res2","res3","res4","res5","res6","res7","res8","res9","res10","res11","res12","res13","res14","res15"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://api.openweathermap.org/data/2.5/find?';\nconst appId = '7d21fcc19d2a5ea9e47384b584b78a2e';\n\nconst cities = [\n  'oulu',\n  'helsinki',\n  'tornio',\n  'kemili',\n  'lulea',\n  'uppsala',\n  'goteborg',\n  'stockholm',\n  'oslo',\n  'tromso',\n  'vardo',\n  'bergen',\n  'copenhagen',\n  'helsingor',\n  'skagen',\n  'alborg',\n];\n\nconst request = async (city) => axios.get(`${url}q=${city}&appid=${appId}`).then((result) => {\n  let location = null;\n  if (result) {\n    if (result.status === 200) {\n      const { data } = result;\n      const { list } = data;\n      // eslint-disable-next-line prefer-destructuring\n      location = list[0];\n    }\n  }\n\n  return location;\n});\n\nconst process = (result) => {\n  let location = null;\n  if (result.status === 200) {\n    const { data } = result;\n    const { list } = data;\n    // eslint-disable-next-line prefer-destructuring\n    location = list[0];\n  }\n  return location;\n};\n\nconst getLocations = async () => {\n  const axiosOulu = request(cities[0]);\n  const axiosHelsinki = request(cities[1]);\n  const axiosTornio = request(cities[2]);\n  const axiosKemili = request(cities[3]);\n  const axiosLulea = request(cities[4]);\n  const axiosUppsala = request(cities[5]);\n  const axiosGoteborg = request(cities[6]);\n  const axiosStockholm = request(cities[7]);\n  const axioOsslo = request(cities[8]);\n  const axiosTromso = request(cities[9]);\n  const axiosVardo = request(cities[10]);\n  const axiosBergen = request(cities[11]);\n  const axiosCopenhagen = request(cities[12]);\n  const axiosHelsingor = request(cities[13]);\n  const axiosSkagen = request(cities[14]);\n  const axiosAlborg = request(cities[15]);\n\n  await axios\n    .all([\n      axiosOulu,\n      axiosHelsinki,\n      axiosTornio,\n      axiosKemili,\n      axiosLulea,\n      axiosUppsala,\n      axiosGoteborg,\n      axiosStockholm,\n      axioOsslo,\n      axiosTromso,\n      axiosVardo,\n      axiosBergen,\n      axiosCopenhagen,\n      axiosHelsingor,\n      axiosSkagen,\n      axiosAlborg,\n    ])\n    .then(\n      axios.spread(\n        (\n          res0,\n          res1,\n          res2,\n          res3,\n          res4,\n          res5,\n          res6,\n          res7,\n          res8,\n          res9,\n          res10,\n          res11,\n          res12,\n          res13,\n          res14,\n          res15,\n        ) => {\n          process(res0);\n          process(res1);\n          process(res2);\n          process(res3);\n          process(res4);\n          process(res5);\n          process(res6);\n          process(res7);\n          process(res8);\n          process(res9);\n          process(res10);\n          process(res11);\n          process(res12);\n          process(res13);\n          process(res14);\n          process(res15);\n        },\n      ),\n    );\n};\nexport default { getLocations };\n"]},"metadata":{},"sourceType":"module"}
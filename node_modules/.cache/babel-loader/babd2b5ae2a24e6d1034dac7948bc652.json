{"ast":null,"code":"import api from \"../../api/api\";\nimport { receiveLocations } from \"../locations/locations\"; // eslint-disable-next-line no-unused-vars\n\nexport const getLocations = () => dispatch => {\n  // eslint-disable-next-line spaced-comment\n  //let oldLocations = JSON.parse(localStorage.getItem('locations'));\n  // eslint-disable-next-line spaced-comment\n  let oldLocations = null;\n\n  if (!oldLocations) {\n    api.getLocations().then(locations => {\n      console.log(locations);\n      dispatch(receiveLocations(locations)); // eslint-disable-next-line indent\n      // localStorage.setItem('locations', JSON.stringify(locations));\n\n      oldLocations = locations;\n    });\n  } else {\n    setTimeout(() => {\n      dispatch(receiveLocations(oldLocations), 1000);\n    });\n  }\n\n  return oldLocations;\n};","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/redux/api/api.js"],"names":["api","receiveLocations","getLocations","dispatch","oldLocations","then","locations","console","log","setTimeout"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,eAAhB;AACA,SAASC,gBAAT,QAAiC,wBAAjC,C,CACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC9C;AACA;AACA;AACA,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAI,CAACA,YAAL,EAAmB;AACjBJ,IAAAA,GAAG,CAACE,YAAJ,GAAmBG,IAAnB,CAAyBC,SAAD,IAAe;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAH,MAAAA,QAAQ,CAACF,gBAAgB,CAACK,SAAD,CAAjB,CAAR,CAFqC,CAGrC;AACA;;AACAF,MAAAA,YAAY,GAAGE,SAAf;AACD,KAND;AAOD,GARD,MAQO;AACLG,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,QAAQ,CAACF,gBAAgB,CAACG,YAAD,CAAjB,EAAiC,IAAjC,CAAR;AACD,KAFS,CAAV;AAGD;;AACD,SAAOA,YAAP;AACD,CAnBM","sourcesContent":["import api from \"../../api/api\";\nimport { receiveLocations } from \"../locations/locations\";\n// eslint-disable-next-line no-unused-vars\nexport const getLocations = () => (dispatch) => {\n  // eslint-disable-next-line spaced-comment\n  //let oldLocations = JSON.parse(localStorage.getItem('locations'));\n  // eslint-disable-next-line spaced-comment\n  let oldLocations = null;\n  if (!oldLocations) {\n    api.getLocations().then((locations) => {\n      console.log(locations);\n      dispatch(receiveLocations(locations));\n      // eslint-disable-next-line indent\n      // localStorage.setItem('locations', JSON.stringify(locations));\n      oldLocations = locations;\n    });\n  } else {\n    setTimeout(() => {\n      dispatch(receiveLocations(oldLocations), 1000);\n    });\n  }\n  return oldLocations;\n};\n"]},"metadata":{},"sourceType":"module"}
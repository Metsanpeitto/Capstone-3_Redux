{"ast":null,"code":"var _jsxFileName = \"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport store from './redux/configureStore';\nimport Locations from './pages/Locations';\nimport Details from './pages/Details';\nimport { getLocations } from './redux/api/api';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (this.props) {\n      // eslint-disable-next-line react/prop-types\n      const {\n        getLocations\n      } = this.props;\n      getLocations();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/Details\",\n          component: Details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  state\n});\n\nexport default connect(mapStateToProps, {\n  store,\n  getLocations\n})(App);","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/App.js"],"names":["React","connect","Route","Switch","store","Locations","Details","getLocations","App","Component","constructor","props","state","componentDidMount","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,YAAP;;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKF,KAAT,EAAgB;AACd;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAmB,KAAKI,KAA9B;AACAJ,MAAAA,YAAY;AACb;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAET;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,UAAlB;AAA6B,UAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAvB+B;;AA0BlC,MAAMS,eAAe,GAAIH,KAAD,KAAY;AAClCA,EAAAA;AADkC,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CAACc,eAAD,EAAkB;AAAEX,EAAAA,KAAF;AAASG,EAAAA;AAAT,CAAlB,CAAP,CAAkDC,GAAlD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport store from './redux/configureStore';\nimport Locations from './pages/Locations';\nimport Details from './pages/Details';\nimport { getLocations } from './redux/api/api';\nimport './App.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (this.props) {\n      // eslint-disable-next-line react/prop-types\n      const { getLocations } = this.props;\n      getLocations();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Locations} />\n          <Route exact path=\"/Details\" component={Details} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n});\n\nexport default connect(mapStateToProps, { store, getLocations })(App);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable no-unused-vars */import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{Link}from'react-router-dom';import Card from'./Card';import{filterCountries}from'../redux/filter/filter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Displayer(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state;}),locationsReducer=_useSelector.locationsReducer;var _useSelector2=useSelector(function(state){return state;}),filtersReducer=_useSelector2.filtersReducer;var countries=locationsReducer.countries,imgs=locationsReducer.imgs,locations=locationsReducer.locations;var countriesFiltered=filtersReducer.countriesFiltered;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),countriesOld=_useState2[0],setCountriesOld=_useState2[1];var filter=function filter(e){var value=e.target.value;dispatch(filterCountries(value));};useEffect(function(){if(!countriesFiltered){if(countries!==countriesOld){setCountriesOld(countries);}}else if(countriesFiltered!==countriesOld){setCountriesOld(countriesFiltered);}});return/*#__PURE__*/_jsxs(\"div\",{className:\"locations-displayer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[/*#__PURE__*/_jsx(\"h6\",{className:\"stats\",children:\"STATS BY COUNTRY\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"filter-category\",placeholder:\"Category\",onChange:filter,id:\"input-category\",name:\"input-category\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"-\",children:\" - \"}),/*#__PURE__*/_jsx(\"option\",{value:\"Finland\",children:\"Finland\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sweden\",children:\"Sweden\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Norway\",children:\"Norway\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Denmark\",children:\"Denmark\"})]})]}),locations?/*#__PURE__*/_jsx(\"div\",{className:\"displayer-countries\",children:countriesOld.map(function(c,index){return/*#__PURE__*/_jsx(Link,{to:{pathname:'./Details',itemProps:{countryName:countries[index],data:locations[index],img:imgs[index]}},active:\"true\",exact:\"true\",children:/*#__PURE__*/_jsx(Card,{cities:locations[index],img:imgs[index],country:countries[index]})},countries[index]);})}):/*#__PURE__*/_jsx(\"h5\",{className:\"empty\",children:\"Empty Collection\"})]});}export default Displayer;","map":{"version":3,"sources":["/home/jarri/Desktop/Work/Microverse/capstones/capstone-3-files/capstone-3_redux/src/components/Displayer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Link","Card","filterCountries","Displayer","dispatch","state","locationsReducer","filtersReducer","countries","imgs","locations","countriesFiltered","countriesOld","setCountriesOld","filter","e","value","target","map","c","index","pathname","itemProps","countryName","data","img"],"mappings":"sMAAA,mCACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,eAAT,KAAgC,wBAAhC,C,wFAEA,QAASC,CAAAA,SAAT,EAAqB,CACnB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA,iBAA6BC,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAAxC,CAAQC,gBAAR,cAAQA,gBAAR,CACA,kBAA2BP,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAAtC,CAAQE,cAAR,eAAQA,cAAR,CACA,GAAQC,CAAAA,SAAR,CAAuCF,gBAAvC,CAAQE,SAAR,CAAmBC,IAAnB,CAAuCH,gBAAvC,CAAmBG,IAAnB,CAAyBC,SAAzB,CAAuCJ,gBAAvC,CAAyBI,SAAzB,CACA,GAAQC,CAAAA,iBAAR,CAA8BJ,cAA9B,CAAQI,iBAAR,CACA,cAAwCf,QAAQ,CAAC,IAAD,CAAhD,wCAAOgB,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAO,CACpB,GAAQC,CAAAA,KAAR,CAAkBD,CAAC,CAACE,MAApB,CAAQD,KAAR,CACAZ,QAAQ,CAACF,eAAe,CAACc,KAAD,CAAhB,CAAR,CACD,CAHD,CAKAnB,SAAS,CAAC,UAAM,CACd,GAAI,CAACc,iBAAL,CAAwB,CACtB,GAAIH,SAAS,GAAKI,YAAlB,CAAgC,CAC9BC,eAAe,CAACL,SAAD,CAAf,CACD,CACF,CAJD,IAIO,IAAIG,iBAAiB,GAAKC,YAA1B,CAAwC,CAC7CC,eAAe,CAACF,iBAAD,CAAf,CACD,CACF,CARQ,CAAT,CAUA,mBACE,aAAK,SAAS,CAAC,qBAAf,wBACE,aAAK,SAAS,CAAC,OAAf,wBACE,WAAI,SAAS,CAAC,OAAd,8BADF,cAEE,gBACE,SAAS,CAAC,iBADZ,CAEE,WAAW,CAAC,UAFd,CAGE,QAAQ,CAAEG,MAHZ,CAIE,EAAE,CAAC,gBAJL,CAKE,IAAI,CAAC,gBALP,wBAOE,eAAQ,KAAK,CAAC,GAAd,iBAPF,cAQE,eAAQ,KAAK,CAAC,SAAd,qBARF,cASE,eAAQ,KAAK,CAAC,QAAd,oBATF,cAUE,eAAQ,KAAK,CAAC,QAAd,oBAVF,cAWE,eAAQ,KAAK,CAAC,SAAd,qBAXF,GAFF,GADF,CAkBGJ,SAAS,cACR,YAAK,SAAS,CAAC,qBAAf,UACGE,YAAY,CAACM,GAAb,CAAiB,SAACC,CAAD,CAAIC,KAAJ,qBAChB,KAAC,IAAD,EAEE,EAAE,CAAE,CACFC,QAAQ,CAAE,WADR,CAEFC,SAAS,CAAE,CACTC,WAAW,CAAEf,SAAS,CAACY,KAAD,CADb,CAETI,IAAI,CAAEd,SAAS,CAACU,KAAD,CAFN,CAGTK,GAAG,CAAEhB,IAAI,CAACW,KAAD,CAHA,CAFT,CAFN,CAUE,MAAM,CAAC,MAVT,CAWE,KAAK,CAAC,MAXR,uBAaE,KAAC,IAAD,EACE,MAAM,CAAEV,SAAS,CAACU,KAAD,CADnB,CAEE,GAAG,CAAEX,IAAI,CAACW,KAAD,CAFX,CAGE,OAAO,CAAEZ,SAAS,CAACY,KAAD,CAHpB,EAbF,EACOZ,SAAS,CAACY,KAAD,CADhB,CADgB,EAAjB,CADH,EADQ,cAyBR,WAAI,SAAS,CAAC,OAAd,8BA3CJ,GADF,CAgDD,CAED,cAAejB,CAAAA,SAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\nimport { filterCountries } from '../redux/filter/filter';\n\nfunction Displayer() {\n  const dispatch = useDispatch();\n  const { locationsReducer } = useSelector((state) => state);\n  const { filtersReducer } = useSelector((state) => state);\n  const { countries, imgs, locations } = locationsReducer;\n  const { countriesFiltered } = filtersReducer;\n  const [countriesOld, setCountriesOld] = useState(null);\n\n  const filter = (e) => {\n    const { value } = e.target;\n    dispatch(filterCountries(value));\n  };\n\n  useEffect(() => {\n    if (!countriesFiltered) {\n      if (countries !== countriesOld) {\n        setCountriesOld(countries);\n      }\n    } else if (countriesFiltered !== countriesOld) {\n      setCountriesOld(countriesFiltered);\n    }\n  });\n\n  return (\n    <div className=\"locations-displayer\">\n      <div className=\"stats\">\n        <h6 className=\"stats\">STATS BY COUNTRY</h6>\n        <select\n          className=\"filter-category\"\n          placeholder=\"Category\"\n          onChange={filter}\n          id=\"input-category\"\n          name=\"input-category\"\n        >\n          <option value=\"-\"> - </option>\n          <option value=\"Finland\">Finland</option>\n          <option value=\"Sweden\">Sweden</option>\n          <option value=\"Norway\">Norway</option>\n          <option value=\"Denmark\">Denmark</option>\n        </select>\n      </div>\n\n      {locations ? (\n        <div className=\"displayer-countries\">\n          {countriesOld.map((c, index) => (\n            <Link\n              key={countries[index]}\n              to={{\n                pathname: './Details',\n                itemProps: {\n                  countryName: countries[index],\n                  data: locations[index],\n                  img: imgs[index],\n                },\n              }}\n              active=\"true\"\n              exact=\"true\"\n            >\n              <Card\n                cities={locations[index]}\n                img={imgs[index]}\n                country={countries[index]}\n              />\n            </Link>\n          ))}\n        </div>\n      ) : (\n        <h5 className=\"empty\">Empty Collection</h5>\n      )}\n    </div>\n  );\n}\n\nexport default Displayer;\n"]},"metadata":{},"sourceType":"module"}